# File: azure-template-docker-job.yml
# Date: 22-Aug-2020 jdw Preliminary version
#
# Updates:
#
##
parameters:
  os: ""
  docker_task: ""

jobs:
  - job: ${{ format('build_docker_{0}_{1}', parameters.docker_task, parameters.os) }}
    timeoutInMinutes: 0
    pool:
      ${{ if eq(parameters.os, 'linux') }}:
        vmImage: "ubuntu-20.04"

    variables:
      - template: azure-template-variables.yml

    steps:
      - bash: echo "variables - py_module ${{variables.py_module}} image_name ${{variables.image_name}} registry_user ${{variables.registry_user}} "
      - bash: echo "parameters - docker_task ${{parameters.docker_task}} os ${{parameters.os}}"
      #
      - checkout: self
        submodules: true
      #
      - task: DockerInstaller@0
        displayName: "Docker Installer"
        inputs:
          #dockerVersion: 17.09.0-ce
          #dockerVersion: 19.03.9
          dockerVersion: 20.10.8
          releaseType: stable
      #
      - ${{ if startsWith(parameters.docker_task, 'build_and_test') }}:
          - bash: |
              set -e
              pwd
              REGISTRY_USER=${{ variables.registry_user }}
              #
              IMAGE_NAME=${IMAGE_NAME:-"${{ variables.image_name }}"}
              TAG_TEST=${TAG_TEST:-"unittest"}
              PY_MODULE=${PY_MODULE:-"${{ variables.py_module }}"}
              #
              VER=`grep '__version__' rcsb/app/${PY_MODULE}/__init__.py | awk '{print $3}' | tr -d '"'`
              #
              docker build --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                          --build-arg VCS_REF=`git rev-parse --short HEAD` \
                          --build-arg VERSION=$VER \
                          --tag ${REGISTRY_USER}/${IMAGE_NAME}:${TAG_TEST} \
                          --file ./Dockerfile.${TAG_TEST} .
              #
              docker image ls
              docker container ls
              # docker rm -f ${IMAGE_NAME}
              echo "Begin running unittests on image ${IMAGE_NAME}"
              docker run --name ${IMAGE_NAME} ${REGISTRY_USER}/${IMAGE_NAME}:${TAG_TEST} tox >& /dev/null || {
                  echo "Unittests failing for ${IMAGE_NAME} ---- return code: $?"
                  docker logs ${IMAGE_NAME}
                  docker rmi -f ${IMAGE_NAME}
                  docker rm -f ${IMAGE_NAME}
                  exit 1
              }
            displayName: "Build and test image"
